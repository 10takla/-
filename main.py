class человек:
    def __init__(self, имя, возраст, пол, урвоень_здоровья):
        self.имя = имя
        self.возраст = возраст
        self.пол = пол
        self.уровень_здоровья = урвоень_здоровья
    def информация_о_человеке(self):
        if self.пол == 'муж':
            print('Настрой на рабочий ритм. Необходимо выполнение поисковой деятельности, решение принципиально новых задач. Ориентирован  на прогресс.')
        else: print('Лучше выполняют типовые, шаблонные задачи. Создание благоприятной эмоциональной обстановки: связь обучения с радостью и удовольствием. Ориентирована на выживаемость')

class мозг(человек):
    def __init__(self, имя, возраст, пол, урвоень_здоровья):
        super().__init__(имя, возраст, пол, урвоень_здоровья)
        self.количество_нейронов = 86

        if int(self.возраст) < 15:
            self.количество_нейронов = self.количество_нейронов - 10
        if int(self.уровень_здоровья) < 50:
            self.количество_нейронов = self.количество_нейронов - 10
    def информация_о_мозге(self):
        print('Мозг - сложная и взаимосвязанная система, самая крупная и функционально важная часть ЦНС. Его функции включают обработку сенсорной информации, поступающую от органов чувств, планирование, принятие решений, координацию, управление движениями, положительные и отрицательные эмоции, внимание, память. Высшая функция, выполняемая мозгом - мышление.')
    def информация_о_нейронах(self):
        print(self.количество_нейронов, 'млрд нейронов')

class левое_полушарие(мозг):
    def __init__(self, количество_нейронов):
        super().__init__(количество_нейронов)
        self.Обработка_невербальной_информации = 0
        self.Аналитическое_мышление = 0
        self.Буквальное_понимание_слов = 0
        self.Последовательная_обработка_информации = 0
        self.Математические_способности = 0
        self.Контроль_за_движениями_правой_половины_тела = 0



class правое_полушарие(мозг):
    def __init__(self, Обработка_невербальной_информации, Пространственная_ориентация, Музыкальность, Метафоры, Воображение, Эмоции, Мистика, Мечты, Параллельная_обработка_информации, Контролирует_движения_левой_половины_тела):
        self.Обработка_невербальной_информации = Обработка_невербальной_информации
        self.Пространственная_ориентация = Пространственная_ориентация
        self.Музыкальность = Музыкальность
        self.Метафоры = Метафоры
        self.Воображение = Воображение
        self.Эмоции = Эмоции
        self.Мистика = Мистика
        self.Мечты = Мечты
        self.Параллельная_обработка_информации = Параллельная_обработка_информации
        self.Контролирует_движения_левой_половины_тела = Контролирует_движения_левой_половины_тела



Майк = мозг('Майк', '12', 'муж', '30')
Майк.информация_о_человеке()
Майк.информация_о_нейронах()
левое_полушарие.просто()


"""


class Person:
    def __init__(self, name):
        self.name = name
        self.age = 3

class Student(Person):
    def __init__(self, name):
        super().__init__(name)
        self.hip = 6
    def learn(self):
        if self.age < self.hip:
            print(self.age + 5)


b=Student('Mike')

b.learn()
"""

